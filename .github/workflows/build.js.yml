on: push
jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu]
        include:
          - os: windows
            name: windows
            build: |
              npx caxa --input . --output "windows/ayanbot.exe" -- "{{caxa}}/node_modules/.bin/node" "{{caxa}}/index.js" "CAXA"
            artifact: ayanbot.exe
          - os: ubuntu
            name: linux
            build: |
              npx caxa --input . --output "linux/ayanbot" -- "{{caxa}}/node_modules/.bin/node" "{{caxa}}/index.js" "CAXA"
            artifact: ayanbot
    runs-on: ${{ matrix.os }}-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 15
      - run: |
          npm ci
          ${{ matrix.build }}
      - uses: actions/upload-artifact@v2
        with:
          name: ayanbot-${{ matrix.name }}
          path: ./${{ matrix.name }}
  release:
    if: github.ref == 'refs/heads/master'
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@master
      - uses: actions/download-artifact@v2
        with:
          name: ayanbot-windows
      - uses: actions/download-artifact@v2
        with:
          name: ayanbot-linux
      - name: "Pack files"
        run: |
          zip ayanbot-windows.zip ayanbot.exe
          tar -czf "ayanbot-linux.tgz" "ayanbot"
      - uses: actions/create-release@v1
        id: create-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.package-version.outputs.current-version }}
          release_name: Release ${{ steps.package-version.outputs.current-version }}
          draft: true
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ayanbot-windows.zip
          asset_name: ayanbot-windows.zip
          asset_content_type: application/zip
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ayanbot-linux.tgz
          asset_name: ayanbot-linux.tgz
          asset_content_type: application/gzip